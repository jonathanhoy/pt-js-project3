(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

var app = {};

app.apiKeyMapbox = 'pk.eyJ1Ijoiam9uYXRoYW5ob3kiLCJhIjoiY2psOXNtN29tMGVzNDNrbzV6MDdkajZnbyJ9.uM-tD0Q7WPAZUdT_0y9zqg';
app.apiKeyDarkSky = 'aabc3958afb1ab39dcbe55a9d3801b80';

app.fetchMap = function () {
	var lat = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 43.6532;
	var lng = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -79.3832;

	var mymap = L.map('mapid').setView([lat, lng], 14);
	var latlng = L.latLng(lat, lng);
	var home = L.marker([lat, lng]).bindPopup('You are here / Starting Point').addTo(mymap);
	L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1Ijoiam9uYXRoYW5ob3kiLCJhIjoiY2psOXNtN29tMGVzNDNrbzV6MDdkajZnbyJ9.uM-tD0Q7WPAZUdT_0y9zqg', {
		attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
		maxZoom: 18,
		minZoom: 13,
		center: latlng,
		id: 'mapbox.streets',
		accessToken: app.apiKeyMapbox
	}).addTo(mymap);

	var c = new L.Control.Coordinates();
	c.addTo(mymap);
	mymap.on('click', function (e) {
		c.setCoordinates(e);
		var endLat = e.latlng.lat;
		var endLng = e.latlng.lng;
		var endRoute = [];
		endRoute.push(endLat, endLng);
		L.Routing.control({
			waypoints: [L.latLng(lat, lng), L.latLng(endRoute[0], endRoute[1])]
		}).addTo(mymap);
	});
};

app.fetchWeather = function () {
	var lat = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 43.6532;
	var lng = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -79.3832;

	$.ajax({
		url: 'https://api.darksky.net/forecast/' + app.apiKeyDarkSky + '/' + lat + ',' + lng + '?units=si',
		dataType: 'JSONP',
		method: 'GET'
	}).then(function (data) {
		console.log(data);
		var timeOfRun = $('#timeOfRun').val();
		var currentTemp = Math.floor(data.currently.temperature);
		var currentFeelsLike = Math.floor(data.currently.apparentTemperature);
		var currentSummary = data.currently.summary;
		var oneHourTemp = Math.floor(data.hourly.data[1].apparentTemperature);
		var oneHourFeelsLike = Math.floor(data.hourly.data[1].temperature);
		var oneHourSummary = data.hourly.data[1].summary;
		var twoHourTemp = Math.floor(data.hourly.data[2].apparentTemperature);
		var twoHourFeelsLike = Math.floor(data.hourly.data[2].temperature);
		var twoHourSummary = data.hourly.data[2].summary;
		var displayTemp = $('.temp span');
		var displayFeelsLike = $('.feelsLike span');
		var displaySummary = $('.summary span');
		if (timeOfRun === 'now') {
			displayTemp.append(currentTemp);
			displayFeelsLike.append(currentFeelsLike);
			displaySummary.append(currentSummary);
		} else if (timeOfRun === '1hour') {
			displayTemp.append(oneHourTemp);
			displayFeelsLike.append(oneHourFeelsLike);
			displaySummary.append(oneHourSummary);
		} else if (timeOfRun === '2hour') {
			displayTemp.append(twoHourTemp);
			displayFeelsLike.append(twoHourFeelsLike);
			displaySummary.append(twoHourSummary);
		};
	});
};

app.fetchCoordinates = function () {
	$('.getInfo').on('click', function () {
		$('.infoDisplay').css('display', 'block');
		navigator.geolocation.getCurrentPosition(function (position) {
			var lat = position.coords.latitude;
			var lng = position.coords.longitude;
			console.log(position);
			app.fetchMap(lat, lng);
			app.fetchWeather(lat, lng);
		});
	});
};

app.init = function () {
	app.fetchCoordinates();
};

$(function () {
	app.init();
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
